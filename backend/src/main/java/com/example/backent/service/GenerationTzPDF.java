package com.example.backent.service;

import com.example.backent.entity.Project;
import com.example.backent.entity.Ticket;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.EOFException;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class GenerationTzPDF {
  private static String FILE = "tz.pdf";
  private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
  private static Font redFont =
      new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);
  private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD);
  private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

  public static File generationPDF(Project project, java.util.List<Ticket> ticket)
      throws IOException {
    System.out.println(new SimpleDateFormat("yyyy-MM-dd hh:mm").format(new Date()));
    try {
      Document document = new Document();
      FileOutputStream fileOutputStream = new FileOutputStream(FILE);
      PdfWriter.getInstance(document, fileOutputStream);
      document.open();
      addMetaData(document, project.getName());
      addTitlePage(document);
      //      addContent(document);
      addTicket(document, ticket);
      document.close();
      return new File(FILE);
    } catch (Exception e) {
      throw new EOFException("String can not be empty!");
    }
  }

  private static void addTicket(Document document, java.util.List<Ticket> ticket)
      throws DocumentException {
    for (Ticket t : ticket) {
      Anchor anchor = new Anchor(t.getText(), catFont);

      // Second parameter is the number of the chapter
      Chapter catPart = new Chapter(new Paragraph(anchor), 1);

      Paragraph subPara = null;
      Section subCatPart = catPart.addSection((Paragraph) null);
      subCatPart.add(new Paragraph(t.getTag() != null ? t.getTag().getName() : ""));

      subPara = new Paragraph("working users", subFont);
      subCatPart = catPart.addSection(subPara);
      subCatPart.add(
          new Paragraph(" Pm :" + t.getPm().getFirstname() + " " + t.getPm().getLastname()));
      subCatPart.add(
          new Paragraph(
              " Worker :"
                  + t.getWorker().getFirstname()
                  + " "
                  + t.getWorker().getLastname()
                  + "     time :"
                  + t.getHoursWorker()));
      subCatPart.add(
          new Paragraph(
              " Tester :"
                  + t.getTester().getFirstname()
                  + " "
                  + t.getTester().getLastname()
                  + "     time :"
                  + t.getHoursTester()));

      // add a list
      //      createList(subCatPart);
      Paragraph paragraph = new Paragraph();
      //      addEmptyLine(paragraph, 5);
      subCatPart.add(paragraph);

      // now add all this to the document
      document.add(catPart);

      // Next section
      //      anchor = new Anchor("Second Chapter", catFont);
      //      anchor.setName("Second Chapter");

      // Second parameter is the number of the chapter
      //      catPart = new Chapter(new Paragraph(anchor), 1);

      //      subPara = new Paragraph("Subcategory", subFont);
      //      subCatPart = catPart.addSection(subPara);
      //      subCatPart.add(new Paragraph("This is a very important message"));

      // now add all this to the document
      document.add(catPart);
    }
  }

  // iText allows to add metadata to the PDF which can be viewed in your Adobe
  // Reader
  // under File -> Properties
  private static void addMetaData(Document document, String name) {
    document.addTitle(name);
    document.addSubject(name);
    document.addKeywords("Java, PDF, iText");
    document.addAuthor("Koinot");
    document.addCreator("Qudratjon");
  }

  private static void addTitlePage(Document document) throws DocumentException {
    Paragraph preface = new Paragraph();
    // We add one empty line
    //    addEmptyLine(preface, 5);
    // Lets write a big header
    preface.add(new Paragraph("this is tz", catFont));

    addEmptyLine(preface, 1);
    // Will create: Report generated by: _name, _date
    preface.add(
        new Paragraph(
            "technical challenge generated by: "
                + System.getProperty("user.name")
                + ", "
                + new SimpleDateFormat("yyyy-MM-dd hh:mm").format(new Date()),
            smallBold));
    addEmptyLine(preface, 3);
    preface.add(
        new Paragraph("This document describes something which is very important ", smallBold));

    //    addEmptyLine(preface, 8);

    preface.add(
        new Paragraph(
            "This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.com ;-).",
            redFont));

    document.add(preface);
    // Start a new page
    document.newPage();
  }

  private static void addContent(Document document) throws DocumentException {
    Anchor anchor = new Anchor("First Chapter", catFont);
    anchor.setName("First Chapter");

    // Second parameter is the number of the chapter
    Chapter catPart = new Chapter(new Paragraph(anchor), 1);

    Paragraph subPara = new Paragraph("Subcategory 1", subFont);
    Section subCatPart = catPart.addSection(subPara);
    subCatPart.add(new Paragraph("Hello"));

    subPara = new Paragraph("Subcategory 2", subFont);
    subCatPart = catPart.addSection(subPara);
    createList(subCatPart);
    Paragraph paragraph = new Paragraph();
    addEmptyLine(paragraph, 5);
    subCatPart.add(paragraph);

    // add a table
    createTable(subCatPart);

    // now add all this to the document
    document.add(catPart);

    // Next section
    //    anchor = new Anchor("Second Chapter", catFont);
    //    anchor.setName("Second Chapter");

    // Second parameter is the number of the chapter
    //    catPart = new Chapter(new Paragraph(anchor), 1);

    //    subPara = new Paragraph("Subcategory", subFont);
    //    subCatPart = catPart.addSection(subPara);
    //    subCatPart.add(new Paragraph("This is a very important message"));

    // now add all this to the document
    document.add(catPart);
  }

  private static void createTable(Section subCatPart) throws BadElementException {
    PdfPTable table = new PdfPTable(3);

    // t.setBorderColor(BaseColor.GRAY);
    // t.setPadding(4);
    // t.setSpacing(4);
    // t.setBorderWidth(1);

    PdfPCell c1 = new PdfPCell(new Phrase("Table Header 1"));
    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
    table.addCell(c1);

    c1 = new PdfPCell(new Phrase("Table Header 2"));
    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
    table.addCell(c1);

    c1 = new PdfPCell(new Phrase("Table Header 3"));
    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
    table.addCell(c1);
    table.setHeaderRows(1);

    table.addCell("1.0");
    table.addCell("1.1");
    table.addCell("1.2");
    table.addCell("2.1");
    table.addCell("2.2");
    table.addCell("2.3");

    subCatPart.add(table);
  }

  private static void createList(Section subCatPart) {
    List list = new List(true, false, 10);
    list.add(new ListItem("First point"));
    list.add(new ListItem("Second point"));
    list.add(new ListItem("Third point"));
    subCatPart.add(list);
  }

  private static void addEmptyLine(Paragraph paragraph, int number) {
    for (int i = 0; i < number; i++) {
      paragraph.add(new Paragraph(" "));
    }
  }
}
